var datacontext = require('../../models/server-context.js');
var hasher = require('password-hash');
var Q = require("q");

module.exports =
{
    loginUser: function (username, password, token) {
        var context = datacontext();

        var deferred = Q.defer();

        context.then(function (models) {
            models.user.find({ displayName: username }, function (error, results) {
                if (error) {
                    deferred.reject(error);
                }

                if (results.length > 0) {
                    if (hasher.verify(password, results[0].password)) {
                        console.log("Login successful");
                        results[0].token = token;
                        results[0].save(function (error) {
                            if (error) {
                                deferred.reject(error);
                            }
                        });
                        deferred.resolve("ok");
                    }
                }

                deferred.resolve("no");
            });
        }, function (error) {
            deferred.reject(error);
        });

        return deferred.promise;
    },

    registerUser: function (username, password, token, email, os) {
        var context = datacontext();

        var deferred = Q.defer();

        context.then(function (models) {
            models.user.create(
            {
                userId: 0,
                email: email,
                password: hasher.generate(password),
                os: os,
                displayName: username,
                token: token
            }, function (error) {
                if (error) {
                    deferred.resolve("no");
                }
                else {
                    models.company.get(1, function (error, results)
                    {
                        if (error)
                        {
                            deferred.reject(error);
                        }
                        
                        models.user.companies.add(results);
                    });
                    console.log("Registered user: " + username);
                    deferred.resolve("ok");
                }
            });
        }, function (eror) {
            deferred.reject("Server error");
        });

        return deferred.promise;
    }
};